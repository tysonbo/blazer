#pragma checksum "C:\Users\doconnel\Documents\Visual Studio 2017\Projects\BlazorDash\BlazorDash\Pages\FetchContactJourney.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "417a5c089c21faece7f8802eb1c517e038a0a547"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorDash.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using Microsoft.JSInterop;
    using BlazorDash;
    using BlazorDash.Shared;
    [Microsoft.AspNetCore.Blazor.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/fetchcontactjourney")]
    public class FetchContactJourney : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 62 "C:\Users\doconnel\Documents\Visual Studio 2017\Projects\BlazorDash\BlazorDash\Pages\FetchContactJourney.cshtml"
            
    string notificationMessage;
    IList<ContactContext> contacts;

    protected override async Task OnInitAsync()
    {
        try
        {
            contacts = await Http.GetJsonAsync<IList<ContactContext>>("sample-data/journey.json");
        }
        catch (Exception exception)
        {
            notificationMessage = $"Exception Message: {exception.Message}";
        }
    }

    private bool ShouldHighlight(string args)
    {
        bool highlight = false;

        if ((args.Equals("No (Should be Yes)", StringComparison.OrdinalIgnoreCase)) ||
                (args.Equals("Should be populated", StringComparison.OrdinalIgnoreCase)))
        {
            highlight = true;
        }

        return highlight;
    }

    class ContactContext
    {
        public string ContactAttribute { get; set; }
        public string WebMobile { get; set; }
        public string IvrTad { get; set; }
        public string ConnectCsr1 { get; set; }
        public string ContactRouting1 { get; set; }
        public string ConnectCsr2 { get; set; }
        public string ContactRouting2 { get; set; }
        public string AsiExternal { get; set; }
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
